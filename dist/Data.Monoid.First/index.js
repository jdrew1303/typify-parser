// Generated by psc-make version 0.5.5
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var First = {
    create: function (value) {
        return value;
    }
};
var showFirst = function (__dict_Show_0) {
    return new Prelude.Show(function (_196) {
        return "First (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_0))(_196) + ")");
    });
};
var semigroupFirst = function () {
    return new Prelude.Semigroup(function (_197) {
        return function (_198) {
            if (_197 instanceof Data_Maybe.Just) {
                return _197;
            };
            return _198;
        };
    });
};
var runFirst = function (_189) {
    return _189;
};
var monoidFirst = function () {
    return new Data_Monoid.Monoid(semigroupFirst, Data_Maybe.Nothing.value);
};
var eqFirst = function (__dict_Eq_2) {
    return new Prelude.Eq(function (_192) {
        return function (_193) {
            return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_2))(_192)(_193);
        };
    }, function (_190) {
        return function (_191) {
            return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_2))(_190)(_191);
        };
    });
};
var ordFirst = function (__dict_Ord_1) {
    return new Prelude.Ord(function () {
        return eqFirst(__dict_Ord_1["__superclass_Prelude.Eq_0"]());
    }, function (_194) {
        return function (_195) {
            return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_1))(_194)(_195);
        };
    });
};
module.exports = {
    First: First, 
    runFirst: runFirst, 
    eqFirst: eqFirst, 
    ordFirst: ordFirst, 
    showFirst: showFirst, 
    semigroupFirst: semigroupFirst, 
    monoidFirst: monoidFirst
};
