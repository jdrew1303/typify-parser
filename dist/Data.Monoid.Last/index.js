// Generated by psc-make version 0.5.5
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Last = {
    create: function (value) {
        return value;
    }
};
var showLast = function (__dict_Show_0) {
    return new Prelude.Show(function (_267) {
        return "Last (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_0))(_267) + ")");
    });
};
var semigroupLast = function () {
    return new Prelude.Semigroup(function (_268) {
        return function (_269) {
            if (_269 instanceof Data_Maybe.Just) {
                return _269;
            };
            if (_269 instanceof Data_Maybe.Nothing) {
                return _268;
            };
            throw new Error("Failed pattern match");
        };
    });
};
var runLast = function (_260) {
    return _260;
};
var monoidLast = function () {
    return new Data_Monoid.Monoid(semigroupLast, Data_Maybe.Nothing.value);
};
var eqLast = function (__dict_Eq_2) {
    return new Prelude.Eq(function (_263) {
        return function (_264) {
            return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_2))(_263)(_264);
        };
    }, function (_261) {
        return function (_262) {
            return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_2))(_261)(_262);
        };
    });
};
var ordLast = function (__dict_Ord_1) {
    return new Prelude.Ord(function () {
        return eqLast(__dict_Ord_1["__superclass_Prelude.Eq_0"]());
    }, function (_265) {
        return function (_266) {
            return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_1))(_265)(_266);
        };
    });
};
module.exports = {
    Last: Last, 
    runLast: runLast, 
    eqLast: eqLast, 
    ordLast: ordLast, 
    showLast: showLast, 
    semigroupLast: semigroupLast, 
    monoidLast: monoidLast
};
