// Generated by psc-make version 0.5.5
"use strict";
var Prelude = require("Prelude");
var Data_Array = require("Data.Array");
var Data_Tuple = require("Data.Tuple");
var Data_Maybe = require("Data.Maybe");
var Data_Foldable = require("Data.Foldable");
function Leaf() {

};
Leaf.value = new Leaf();
function Two(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
};
Two.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return new Two(value0, value1, value2, value3);
            };
        };
    };
};
function Three(value0, value1, value2, value3, value4, value5, value6) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
};
Three.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return function (value4) {
                    return function (value5) {
                        return function (value6) {
                            return new Three(value0, value1, value2, value3, value4, value5, value6);
                        };
                    };
                };
            };
        };
    };
};
function TwoLeft(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
};
TwoLeft.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return new TwoLeft(value0, value1, value2);
        };
    };
};
function TwoRight(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
};
TwoRight.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return new TwoRight(value0, value1, value2);
        };
    };
};
function ThreeLeft(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
};
ThreeLeft.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return function (value4) {
                    return function (value5) {
                        return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                    };
                };
            };
        };
    };
};
function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
};
ThreeMiddle.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return function (value4) {
                    return function (value5) {
                        return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                    };
                };
            };
        };
    };
};
function ThreeRight(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
};
ThreeRight.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return function (value4) {
                    return function (value5) {
                        return new ThreeRight(value0, value1, value2, value3, value4, value5);
                    };
                };
            };
        };
    };
};
function KickUp(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
};
KickUp.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return new KickUp(value0, value1, value2, value3);
            };
        };
    };
};
var values = function (_242) {
    if (_242 instanceof Leaf) {
        return [  ];
    };
    if (_242 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray())(values(_242.value0))(Prelude["++"](Data_Array.semigroupArray())([ _242.value2 ])(values(_242.value3)));
    };
    if (_242 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray())(values(_242.value0))(Prelude["++"](Data_Array.semigroupArray())([ _242.value2 ])(Prelude["++"](Data_Array.semigroupArray())(values(_242.value3))(Prelude["++"](Data_Array.semigroupArray())([ _242.value5 ])(values(_242.value6)))));
    };
    throw new Error("Failed pattern match");
};
var toList = function (_240) {
    if (_240 instanceof Leaf) {
        return [  ];
    };
    if (_240 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray())(toList(_240.value0))(Prelude["++"](Data_Array.semigroupArray())([ new Data_Tuple.Tuple(_240.value1, _240.value2) ])(toList(_240.value3)));
    };
    if (_240 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray())(toList(_240.value0))(Prelude["++"](Data_Array.semigroupArray())([ new Data_Tuple.Tuple(_240.value1, _240.value2) ])(Prelude["++"](Data_Array.semigroupArray())(toList(_240.value3))(Prelude["++"](Data_Array.semigroupArray())([ new Data_Tuple.Tuple(_240.value4, _240.value5) ])(toList(_240.value6)))));
    };
    throw new Error("Failed pattern match");
};
var singleton = function (k) {
    return function (v) {
        return new Two(Leaf.value, k, v, Leaf.value);
    };
};
var showTree = function (__dict_Show_0) {
    return function (__dict_Show_1) {
        return function (_234) {
            if (_234 instanceof Leaf) {
                return "Leaf";
            };
            if (_234 instanceof Two) {
                return "Two (" + (showTree(__dict_Show_0)(__dict_Show_1)(_234.value0) + (") (" + (Prelude.show(__dict_Show_0)(_234.value1) + (") (" + (Prelude.show(__dict_Show_1)(_234.value2) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_234.value3) + ")")))))));
            };
            if (_234 instanceof Three) {
                return "Three (" + (showTree(__dict_Show_0)(__dict_Show_1)(_234.value0) + (") (" + (Prelude.show(__dict_Show_0)(_234.value1) + (") (" + (Prelude.show(__dict_Show_1)(_234.value2) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_234.value3) + (") (" + (Prelude.show(__dict_Show_0)(_234.value4) + (") (" + (Prelude.show(__dict_Show_1)(_234.value5) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_234.value6) + ")")))))))))))));
            };
            throw new Error("Failed pattern match");
        };
    };
};
var showMap = function (__dict_Show_2) {
    return function (__dict_Show_3) {
        return new Prelude.Show(function (m) {
            return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(__dict_Show_2)(__dict_Show_3)))(toList(m));
        });
    };
};
var lookup = function (__copy___dict_Ord_4) {
    return function (__copy__236) {
        return function (__copy__237) {
            var __dict_Ord_4 = __copy___dict_Ord_4;
            var _236 = __copy__236;
            var _237 = __copy__237;
            tco: while (true) {
                if (_237 instanceof Leaf) {
                    return Data_Maybe.Nothing.value;
                };
                if (_237 instanceof Two && Prelude["=="](__dict_Ord_4["__superclass_Prelude.Eq_0"]())(_236)(_237.value1)) {
                    return new Data_Maybe.Just(_237.value2);
                };
                if (_237 instanceof Two && Prelude["<"](__dict_Ord_4)(_236)(_237.value1)) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__236 = _236;
                    var __tco__237 = _237.value0;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _236 = __tco__236;
                    _237 = __tco__237;
                    continue tco;
                };
                if (_237 instanceof Two) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__236 = _236;
                    var __tco__237 = _237.value3;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _236 = __tco__236;
                    _237 = __tco__237;
                    continue tco;
                };
                if (_237 instanceof Three && Prelude["=="](__dict_Ord_4["__superclass_Prelude.Eq_0"]())(_236)(_237.value1)) {
                    return new Data_Maybe.Just(_237.value2);
                };
                if (_237 instanceof Three && Prelude["=="](__dict_Ord_4["__superclass_Prelude.Eq_0"]())(_236)(_237.value4)) {
                    return new Data_Maybe.Just(_237.value5);
                };
                if (_237 instanceof Three && Prelude["<"](__dict_Ord_4)(_236)(_237.value1)) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__236 = _236;
                    var __tco__237 = _237.value0;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _236 = __tco__236;
                    _237 = __tco__237;
                    continue tco;
                };
                if (_237 instanceof Three && (Prelude["<"](__dict_Ord_4)(_237.value1)(_236) && Prelude["<="](__dict_Ord_4)(_236)(_237.value4))) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__236 = _236;
                    var __tco__237 = _237.value3;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _236 = __tco__236;
                    _237 = __tco__237;
                    continue tco;
                };
                if (_237 instanceof Three) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__236 = _236;
                    var __tco__237 = _237.value6;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _236 = __tco__236;
                    _237 = __tco__237;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var member = function (__dict_Ord_5) {
    return function (k) {
        return function (m) {
            return Data_Maybe.isJust(lookup(__dict_Ord_5)(k)(m));
        };
    };
};
var keys = function (_241) {
    if (_241 instanceof Leaf) {
        return [  ];
    };
    if (_241 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray())(keys(_241.value0))(Prelude["++"](Data_Array.semigroupArray())([ _241.value1 ])(keys(_241.value3)));
    };
    if (_241 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray())(keys(_241.value0))(Prelude["++"](Data_Array.semigroupArray())([ _241.value1 ])(Prelude["++"](Data_Array.semigroupArray())(keys(_241.value3))(Prelude["++"](Data_Array.semigroupArray())([ _241.value4 ])(keys(_241.value6)))));
    };
    throw new Error("Failed pattern match");
};
var isEmpty = function (_235) {
    if (_235 instanceof Leaf) {
        return true;
    };
    return false;
};
var functorMap = function () {
    return new Prelude.Functor(function (_243) {
        return function (_244) {
            if (_244 instanceof Leaf) {
                return Leaf.value;
            };
            if (_244 instanceof Two) {
                return new Two(Prelude["<$>"](functorMap())(_243)(_244.value0), _244.value1, _243(_244.value2), Prelude["<$>"](functorMap())(_243)(_244.value3));
            };
            if (_244 instanceof Three) {
                return new Three(Prelude["<$>"](functorMap())(_243)(_244.value0), _244.value1, _243(_244.value2), Prelude["<$>"](functorMap())(_243)(_244.value3), _244.value4, _243(_244.value5), Prelude["<$>"](functorMap())(_243)(_244.value6));
            };
            throw new Error("Failed pattern match");
        };
    });
};
var map = Prelude["<$>"](functorMap());
var fromZipper = function (__copy___dict_Ord_6) {
    return function (__copy__238) {
        return function (__copy__239) {
            var __dict_Ord_6 = __copy___dict_Ord_6;
            var _238 = __copy__238;
            var _239 = __copy__239;
            tco: while (true) {
                if (_238.length === 0) {
                    return _239;
                };
                if (_238.length >= 1) {
                    var _790 = _238.slice(1);
                    if (_238[0] instanceof TwoLeft) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__239 = new Two(_239, (_238[0]).value0, (_238[0]).value1, (_238[0]).value2);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _238 = _790;
                        _239 = __tco__239;
                        continue tco;
                    };
                };
                if (_238.length >= 1) {
                    var _795 = _238.slice(1);
                    if (_238[0] instanceof TwoRight) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__239 = new Two((_238[0]).value0, (_238[0]).value1, (_238[0]).value2, _239);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _238 = _795;
                        _239 = __tco__239;
                        continue tco;
                    };
                };
                if (_238.length >= 1) {
                    var _803 = _238.slice(1);
                    if (_238[0] instanceof ThreeLeft) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__239 = new Three(_239, (_238[0]).value0, (_238[0]).value1, (_238[0]).value2, (_238[0]).value3, (_238[0]).value4, (_238[0]).value5);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _238 = _803;
                        _239 = __tco__239;
                        continue tco;
                    };
                };
                if (_238.length >= 1) {
                    var _811 = _238.slice(1);
                    if (_238[0] instanceof ThreeMiddle) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__239 = new Three((_238[0]).value0, (_238[0]).value1, (_238[0]).value2, _239, (_238[0]).value3, (_238[0]).value4, (_238[0]).value5);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _238 = _811;
                        _239 = __tco__239;
                        continue tco;
                    };
                };
                if (_238.length >= 1) {
                    var _819 = _238.slice(1);
                    if (_238[0] instanceof ThreeRight) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__239 = new Three((_238[0]).value0, (_238[0]).value1, (_238[0]).value2, (_238[0]).value3, (_238[0]).value4, (_238[0]).value5, _239);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _238 = _819;
                        _239 = __tco__239;
                        continue tco;
                    };
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var insert = function (__dict_Ord_7) {
    var up = function (__copy___dict_Ord_8) {
        return function (__copy__250) {
            return function (__copy__251) {
                var __dict_Ord_8 = __copy___dict_Ord_8;
                var _250 = __copy__250;
                var _251 = __copy__251;
                tco: while (true) {
                    if (_250.length === 0) {
                        return new Two(_251.value0, _251.value1, _251.value2, _251.value3);
                    };
                    if (_250.length >= 1) {
                        var _834 = _250.slice(1);
                        if (_250[0] instanceof TwoLeft) {
                            return fromZipper(__dict_Ord_8)(_834)(new Three(_251.value0, _251.value1, _251.value2, _251.value3, (_250[0]).value0, (_250[0]).value1, (_250[0]).value2));
                        };
                    };
                    if (_250.length >= 1) {
                        var _843 = _250.slice(1);
                        if (_250[0] instanceof TwoRight) {
                            return fromZipper(__dict_Ord_8)(_843)(new Three((_250[0]).value0, (_250[0]).value1, (_250[0]).value2, _251.value0, _251.value1, _251.value2, _251.value3));
                        };
                    };
                    if (_250.length >= 1) {
                        var _855 = _250.slice(1);
                        if (_250[0] instanceof ThreeLeft) {
                            var __tco___dict_Ord_8 = __dict_Ord_8;
                            var __tco__251 = new KickUp(new Two(_251.value0, _251.value1, _251.value2, _251.value3), (_250[0]).value0, (_250[0]).value1, new Two((_250[0]).value2, (_250[0]).value3, (_250[0]).value4, (_250[0]).value5));
                            __dict_Ord_8 = __tco___dict_Ord_8;
                            _250 = _855;
                            _251 = __tco__251;
                            continue tco;
                        };
                    };
                    if (_250.length >= 1) {
                        var _867 = _250.slice(1);
                        if (_250[0] instanceof ThreeMiddle) {
                            var __tco___dict_Ord_8 = __dict_Ord_8;
                            var __tco__251 = new KickUp(new Two((_250[0]).value0, (_250[0]).value1, (_250[0]).value2, _251.value0), _251.value1, _251.value2, new Two(_251.value3, (_250[0]).value3, (_250[0]).value4, (_250[0]).value5));
                            __dict_Ord_8 = __tco___dict_Ord_8;
                            _250 = _867;
                            _251 = __tco__251;
                            continue tco;
                        };
                    };
                    if (_250.length >= 1) {
                        var _879 = _250.slice(1);
                        if (_250[0] instanceof ThreeRight) {
                            var __tco___dict_Ord_8 = __dict_Ord_8;
                            var __tco__251 = new KickUp(new Two((_250[0]).value0, (_250[0]).value1, (_250[0]).value2, (_250[0]).value3), (_250[0]).value4, (_250[0]).value5, new Two(_251.value0, _251.value1, _251.value2, _251.value3));
                            __dict_Ord_8 = __tco___dict_Ord_8;
                            _250 = _879;
                            _251 = __tco__251;
                            continue tco;
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var down = function (__copy___dict_Ord_9) {
        return function (__copy__246) {
            return function (__copy__247) {
                return function (__copy__248) {
                    return function (__copy__249) {
                        var __dict_Ord_9 = __copy___dict_Ord_9;
                        var _246 = __copy__246;
                        var _247 = __copy__247;
                        var _248 = __copy__248;
                        var _249 = __copy__249;
                        tco: while (true) {
                            if (_249 instanceof Leaf) {
                                return up(__dict_Ord_9)(_246)(new KickUp(Leaf.value, _247, _248, Leaf.value));
                            };
                            if (_249 instanceof Two && Prelude["=="](__dict_Ord_9["__superclass_Prelude.Eq_0"]())(_247)(_249.value1)) {
                                return fromZipper(__dict_Ord_9)(_246)(new Two(_249.value0, _247, _248, _249.value3));
                            };
                            if (_249 instanceof Two && Prelude["<"](__dict_Ord_9)(_247)(_249.value1)) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__246 = Prelude[":"](new TwoLeft(_249.value1, _249.value2, _249.value3))(_246);
                                var __tco__247 = _247;
                                var __tco__248 = _248;
                                var __tco__249 = _249.value0;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _246 = __tco__246;
                                _247 = __tco__247;
                                _248 = __tco__248;
                                _249 = __tco__249;
                                continue tco;
                            };
                            if (_249 instanceof Two) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__246 = Prelude[":"](new TwoRight(_249.value0, _249.value1, _249.value2))(_246);
                                var __tco__247 = _247;
                                var __tco__248 = _248;
                                var __tco__249 = _249.value3;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _246 = __tco__246;
                                _247 = __tco__247;
                                _248 = __tco__248;
                                _249 = __tco__249;
                                continue tco;
                            };
                            if (_249 instanceof Three && Prelude["=="](__dict_Ord_9["__superclass_Prelude.Eq_0"]())(_247)(_249.value1)) {
                                return fromZipper(__dict_Ord_9)(_246)(new Three(_249.value0, _247, _248, _249.value3, _249.value4, _249.value5, _249.value6));
                            };
                            if (_249 instanceof Three && Prelude["=="](__dict_Ord_9["__superclass_Prelude.Eq_0"]())(_247)(_249.value4)) {
                                return fromZipper(__dict_Ord_9)(_246)(new Three(_249.value0, _249.value1, _249.value2, _249.value3, _247, _248, _249.value6));
                            };
                            if (_249 instanceof Three && Prelude["<"](__dict_Ord_9)(_247)(_249.value1)) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__246 = Prelude[":"](new ThreeLeft(_249.value1, _249.value2, _249.value3, _249.value4, _249.value5, _249.value6))(_246);
                                var __tco__247 = _247;
                                var __tco__248 = _248;
                                var __tco__249 = _249.value0;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _246 = __tco__246;
                                _247 = __tco__247;
                                _248 = __tco__248;
                                _249 = __tco__249;
                                continue tco;
                            };
                            if (_249 instanceof Three && (Prelude["<"](__dict_Ord_9)(_249.value1)(_247) && Prelude["<="](__dict_Ord_9)(_247)(_249.value4))) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__246 = Prelude[":"](new ThreeMiddle(_249.value0, _249.value1, _249.value2, _249.value4, _249.value5, _249.value6))(_246);
                                var __tco__247 = _247;
                                var __tco__248 = _248;
                                var __tco__249 = _249.value3;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _246 = __tco__246;
                                _247 = __tco__247;
                                _248 = __tco__248;
                                _249 = __tco__249;
                                continue tco;
                            };
                            if (_249 instanceof Three) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__246 = Prelude[":"](new ThreeRight(_249.value0, _249.value1, _249.value2, _249.value3, _249.value4, _249.value5))(_246);
                                var __tco__247 = _247;
                                var __tco__248 = _248;
                                var __tco__249 = _249.value6;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _246 = __tco__246;
                                _247 = __tco__247;
                                _248 = __tco__248;
                                _249 = __tco__249;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
            };
        };
    };
    return down(__dict_Ord_7)([  ]);
};
var union = function (__dict_Ord_10) {
    return function (m1) {
        return function (m2) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray())(function (m) {
                return function (_233) {
                    return insert(__dict_Ord_10)(_233.value0)(_233.value1)(m);
                };
            })(m2)(toList(m1));
        };
    };
};
var eqMap = function (__dict_Eq_11) {
    return function (__dict_Eq_12) {
        return new Prelude.Eq(function (m1) {
            return function (m2) {
                return !Prelude["=="](eqMap(__dict_Eq_11)(__dict_Eq_12))(m1)(m2);
            };
        }, function (m1) {
            return function (m2) {
                return Prelude["=="](Prelude.eqArray(Data_Tuple.eqTuple(__dict_Eq_11)(__dict_Eq_12)))(toList(m1))(toList(m2));
            };
        });
    };
};
var empty = Leaf.value;
var fromList = function (__dict_Ord_13) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray())(function (m) {
        return function (_232) {
            return insert(__dict_Ord_13)(_232.value0)(_232.value1)(m);
        };
    })(empty);
};
var unions = function (__dict_Ord_14) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray())(union(__dict_Ord_14))(empty);
};
var $$delete = function (__dict_Ord_15) {
    var up = function (__copy___dict_Ord_16) {
        return function (__copy__255) {
            return function (__copy__256) {
                var __dict_Ord_16 = __copy___dict_Ord_16;
                var _255 = __copy__255;
                var _256 = __copy__256;
                tco: while (true) {
                    if (_255.length === 0) {
                        return _256;
                    };
                    if (_255.length >= 1) {
                        var _943 = _255.slice(1);
                        if (_255[0] instanceof TwoLeft && ((_255[0]).value2 instanceof Leaf && _256 instanceof Leaf)) {
                            return fromZipper(__dict_Ord_16)(_943)(new Two(Leaf.value, (_255[0]).value0, (_255[0]).value1, Leaf.value));
                        };
                    };
                    if (_255.length >= 1) {
                        var _948 = _255.slice(1);
                        if (_255[0] instanceof TwoRight && ((_255[0]).value0 instanceof Leaf && _256 instanceof Leaf)) {
                            return fromZipper(__dict_Ord_16)(_948)(new Two(Leaf.value, (_255[0]).value1, (_255[0]).value2, Leaf.value));
                        };
                    };
                    if (_255.length >= 1) {
                        var _957 = _255.slice(1);
                        if (_255[0] instanceof TwoLeft && (_255[0]).value2 instanceof Two) {
                            var __tco___dict_Ord_16 = __dict_Ord_16;
                            var __tco__256 = new Three(_256, (_255[0]).value0, (_255[0]).value1, (_255[0]).value2.value0, (_255[0]).value2.value1, (_255[0]).value2.value2, (_255[0]).value2.value3);
                            __dict_Ord_16 = __tco___dict_Ord_16;
                            _255 = _957;
                            _256 = __tco__256;
                            continue tco;
                        };
                    };
                    if (_255.length >= 1) {
                        var _966 = _255.slice(1);
                        if (_255[0] instanceof TwoRight && (_255[0]).value0 instanceof Two) {
                            var __tco___dict_Ord_16 = __dict_Ord_16;
                            var __tco__256 = new Three((_255[0]).value0.value0, (_255[0]).value0.value1, (_255[0]).value0.value2, (_255[0]).value0.value3, (_255[0]).value1, (_255[0]).value2, _256);
                            __dict_Ord_16 = __tco___dict_Ord_16;
                            _255 = _966;
                            _256 = __tco__256;
                            continue tco;
                        };
                    };
                    if (_255.length >= 1) {
                        var _978 = _255.slice(1);
                        if (_255[0] instanceof TwoLeft && (_255[0]).value2 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_978)(new Two(new Two(_256, (_255[0]).value0, (_255[0]).value1, (_255[0]).value2.value0), (_255[0]).value2.value1, (_255[0]).value2.value2, new Two((_255[0]).value2.value3, (_255[0]).value2.value4, (_255[0]).value2.value5, (_255[0]).value2.value6)));
                        };
                    };
                    if (_255.length >= 1) {
                        var _990 = _255.slice(1);
                        if (_255[0] instanceof TwoRight && (_255[0]).value0 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_990)(new Two(new Two((_255[0]).value0.value0, (_255[0]).value0.value1, (_255[0]).value0.value2, (_255[0]).value0.value3), (_255[0]).value0.value4, (_255[0]).value0.value5, new Two((_255[0]).value0.value6, (_255[0]).value1, (_255[0]).value2, _256)));
                        };
                    };
                    if (_255.length >= 1) {
                        var _998 = _255.slice(1);
                        if (_255[0] instanceof ThreeLeft && ((_255[0]).value2 instanceof Leaf && ((_255[0]).value5 instanceof Leaf && _256 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_16)(_998)(new Three(Leaf.value, (_255[0]).value0, (_255[0]).value1, Leaf.value, (_255[0]).value3, (_255[0]).value4, Leaf.value));
                        };
                    };
                    if (_255.length >= 1) {
                        var _1006 = _255.slice(1);
                        if (_255[0] instanceof ThreeMiddle && ((_255[0]).value0 instanceof Leaf && ((_255[0]).value5 instanceof Leaf && _256 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_16)(_1006)(new Three(Leaf.value, (_255[0]).value1, (_255[0]).value2, Leaf.value, (_255[0]).value3, (_255[0]).value4, Leaf.value));
                        };
                    };
                    if (_255.length >= 1) {
                        var _1014 = _255.slice(1);
                        if (_255[0] instanceof ThreeRight && ((_255[0]).value0 instanceof Leaf && ((_255[0]).value3 instanceof Leaf && _256 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_16)(_1014)(new Three(Leaf.value, (_255[0]).value1, (_255[0]).value2, Leaf.value, (_255[0]).value4, (_255[0]).value5, Leaf.value));
                        };
                    };
                    if (_255.length >= 1) {
                        var _1026 = _255.slice(1);
                        if (_255[0] instanceof ThreeLeft && (_255[0]).value2 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_1026)(new Two(new Three(_256, (_255[0]).value0, (_255[0]).value1, (_255[0]).value2.value0, (_255[0]).value2.value1, (_255[0]).value2.value2, (_255[0]).value2.value3), (_255[0]).value3, (_255[0]).value4, (_255[0]).value5));
                        };
                    };
                    if (_255.length >= 1) {
                        var _1038 = _255.slice(1);
                        if (_255[0] instanceof ThreeMiddle && (_255[0]).value0 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_1038)(new Two(new Three((_255[0]).value0.value0, (_255[0]).value0.value1, (_255[0]).value0.value2, (_255[0]).value0.value3, (_255[0]).value1, (_255[0]).value2, _256), (_255[0]).value3, (_255[0]).value4, (_255[0]).value5));
                        };
                    };
                    if (_255.length >= 1) {
                        var _1050 = _255.slice(1);
                        if (_255[0] instanceof ThreeMiddle && (_255[0]).value5 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_1050)(new Two((_255[0]).value0, (_255[0]).value1, (_255[0]).value2, new Three(_256, (_255[0]).value3, (_255[0]).value4, (_255[0]).value5.value0, (_255[0]).value5.value1, (_255[0]).value5.value2, (_255[0]).value5.value3)));
                        };
                    };
                    if (_255.length >= 1) {
                        var _1062 = _255.slice(1);
                        if (_255[0] instanceof ThreeRight && (_255[0]).value3 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_1062)(new Two((_255[0]).value0, (_255[0]).value1, (_255[0]).value2, new Three((_255[0]).value3.value0, (_255[0]).value3.value1, (_255[0]).value3.value2, (_255[0]).value3.value3, (_255[0]).value4, (_255[0]).value5, _256)));
                        };
                    };
                    if (_255.length >= 1) {
                        var _1077 = _255.slice(1);
                        if (_255[0] instanceof ThreeLeft && (_255[0]).value2 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_1077)(new Three(new Two(_256, (_255[0]).value0, (_255[0]).value1, (_255[0]).value2.value0), (_255[0]).value2.value1, (_255[0]).value2.value2, new Two((_255[0]).value2.value3, (_255[0]).value2.value4, (_255[0]).value2.value5, (_255[0]).value2.value6), (_255[0]).value3, (_255[0]).value4, (_255[0]).value5));
                        };
                    };
                    if (_255.length >= 1) {
                        var _1092 = _255.slice(1);
                        if (_255[0] instanceof ThreeMiddle && (_255[0]).value0 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_1092)(new Three(new Two((_255[0]).value0.value0, (_255[0]).value0.value1, (_255[0]).value0.value2, (_255[0]).value0.value3), (_255[0]).value0.value4, (_255[0]).value0.value5, new Two((_255[0]).value0.value6, (_255[0]).value1, (_255[0]).value2, _256), (_255[0]).value3, (_255[0]).value4, (_255[0]).value5));
                        };
                    };
                    if (_255.length >= 1) {
                        var _1107 = _255.slice(1);
                        if (_255[0] instanceof ThreeMiddle && (_255[0]).value5 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_1107)(new Three((_255[0]).value0, (_255[0]).value1, (_255[0]).value2, new Two(_256, (_255[0]).value3, (_255[0]).value4, (_255[0]).value5.value0), (_255[0]).value5.value1, (_255[0]).value5.value2, new Two((_255[0]).value5.value3, (_255[0]).value5.value4, (_255[0]).value5.value5, (_255[0]).value5.value6)));
                        };
                    };
                    if (_255.length >= 1) {
                        var _1122 = _255.slice(1);
                        if (_255[0] instanceof ThreeRight && (_255[0]).value3 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_1122)(new Three((_255[0]).value0, (_255[0]).value1, (_255[0]).value2, new Two((_255[0]).value3.value0, (_255[0]).value3.value1, (_255[0]).value3.value2, (_255[0]).value3.value3), (_255[0]).value3.value4, (_255[0]).value3.value5, new Two((_255[0]).value3.value6, (_255[0]).value4, (_255[0]).value5, _256)));
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var removeMaxNode = function (__copy___dict_Ord_17) {
        return function (__copy__258) {
            return function (__copy__259) {
                var __dict_Ord_17 = __copy___dict_Ord_17;
                var _258 = __copy__258;
                var _259 = __copy__259;
                tco: while (true) {
                    if (_259 instanceof Two && (_259.value0 instanceof Leaf && _259.value3 instanceof Leaf)) {
                        return up(__dict_Ord_17)(_258)(Leaf.value);
                    };
                    if (_259 instanceof Two) {
                        var __tco___dict_Ord_17 = __dict_Ord_17;
                        var __tco__258 = Prelude[":"](new TwoRight(_259.value0, _259.value1, _259.value2))(_258);
                        var __tco__259 = _259.value3;
                        __dict_Ord_17 = __tco___dict_Ord_17;
                        _258 = __tco__258;
                        _259 = __tco__259;
                        continue tco;
                    };
                    if (_259 instanceof Three && (_259.value0 instanceof Leaf && (_259.value3 instanceof Leaf && _259.value6 instanceof Leaf))) {
                        return up(__dict_Ord_17)(Prelude[":"](new TwoRight(Leaf.value, _259.value1, _259.value2))(_258))(Leaf.value);
                    };
                    if (_259 instanceof Three) {
                        var __tco___dict_Ord_17 = __dict_Ord_17;
                        var __tco__258 = Prelude[":"](new ThreeRight(_259.value0, _259.value1, _259.value2, _259.value3, _259.value4, _259.value5))(_258);
                        var __tco__259 = _259.value6;
                        __dict_Ord_17 = __tco___dict_Ord_17;
                        _258 = __tco__258;
                        _259 = __tco__259;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var maxNode = function (__copy___dict_Ord_18) {
        return function (__copy__257) {
            var __dict_Ord_18 = __copy___dict_Ord_18;
            var _257 = __copy__257;
            tco: while (true) {
                if (_257 instanceof Two && _257.value3 instanceof Leaf) {
                    return {
                        key: _257.value1, 
                        value: _257.value2
                    };
                };
                if (_257 instanceof Two) {
                    var __tco___dict_Ord_18 = __dict_Ord_18;
                    var __tco__257 = _257.value3;
                    __dict_Ord_18 = __tco___dict_Ord_18;
                    _257 = __tco__257;
                    continue tco;
                };
                if (_257 instanceof Three && _257.value6 instanceof Leaf) {
                    return {
                        key: _257.value4, 
                        value: _257.value5
                    };
                };
                if (_257 instanceof Three) {
                    var __tco___dict_Ord_18 = __dict_Ord_18;
                    var __tco__257 = _257.value6;
                    __dict_Ord_18 = __tco___dict_Ord_18;
                    _257 = __tco__257;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var down = function (__copy___dict_Ord_19) {
        return function (__copy__252) {
            return function (__copy__253) {
                return function (__copy__254) {
                    var __dict_Ord_19 = __copy___dict_Ord_19;
                    var _252 = __copy__252;
                    var _253 = __copy__253;
                    var _254 = __copy__254;
                    tco: while (true) {
                        if (_254 instanceof Leaf) {
                            return fromZipper(__dict_Ord_19)(_252)(Leaf.value);
                        };
                        if (_254 instanceof Two && (_254.value0 instanceof Leaf && (_254.value3 instanceof Leaf && Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_253)(_254.value1)))) {
                            return up(__dict_Ord_19)(_252)(Leaf.value);
                        };
                        if (_254 instanceof Two && Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_253)(_254.value1)) {
                            var max = maxNode(__dict_Ord_19)(_254.value0);
                            return removeMaxNode(__dict_Ord_19)(Prelude[":"](new TwoLeft(max.key, max.value, _254.value3))(_252))(_254.value0);
                        };
                        if (_254 instanceof Two && Prelude["<"](__dict_Ord_19)(_253)(_254.value1)) {
                            var __tco___dict_Ord_19 = __dict_Ord_19;
                            var __tco__252 = Prelude[":"](new TwoLeft(_254.value1, _254.value2, _254.value3))(_252);
                            var __tco__253 = _253;
                            var __tco__254 = _254.value0;
                            __dict_Ord_19 = __tco___dict_Ord_19;
                            _252 = __tco__252;
                            _253 = __tco__253;
                            _254 = __tco__254;
                            continue tco;
                        };
                        if (_254 instanceof Two) {
                            var __tco___dict_Ord_19 = __dict_Ord_19;
                            var __tco__252 = Prelude[":"](new TwoRight(_254.value0, _254.value1, _254.value2))(_252);
                            var __tco__253 = _253;
                            var __tco__254 = _254.value3;
                            __dict_Ord_19 = __tco___dict_Ord_19;
                            _252 = __tco__252;
                            _253 = __tco__253;
                            _254 = __tco__254;
                            continue tco;
                        };
                        if (_254 instanceof Three && (_254.value0 instanceof Leaf && (_254.value3 instanceof Leaf && (_254.value6 instanceof Leaf && Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_253)(_254.value1))))) {
                            return fromZipper(__dict_Ord_19)(_252)(new Two(Leaf.value, _254.value4, _254.value5, Leaf.value));
                        };
                        if (_254 instanceof Three && (_254.value0 instanceof Leaf && (_254.value3 instanceof Leaf && (_254.value6 instanceof Leaf && Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_253)(_254.value4))))) {
                            return fromZipper(__dict_Ord_19)(_252)(new Two(Leaf.value, _254.value1, _254.value2, Leaf.value));
                        };
                        if (_254 instanceof Three && Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_253)(_254.value1)) {
                            var max = maxNode(__dict_Ord_19)(_254.value0);
                            return removeMaxNode(__dict_Ord_19)(Prelude[":"](new ThreeLeft(max.key, max.value, _254.value3, _254.value4, _254.value5, _254.value6))(_252))(_254.value0);
                        };
                        if (_254 instanceof Three && Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_253)(_254.value4)) {
                            var max = maxNode(__dict_Ord_19)(_254.value3);
                            return removeMaxNode(__dict_Ord_19)(Prelude[":"](new ThreeMiddle(_254.value0, _254.value1, _254.value2, max.key, max.value, _254.value6))(_252))(_254.value3);
                        };
                        if (_254 instanceof Three && Prelude["<"](__dict_Ord_19)(_253)(_254.value1)) {
                            var __tco___dict_Ord_19 = __dict_Ord_19;
                            var __tco__252 = Prelude[":"](new ThreeLeft(_254.value1, _254.value2, _254.value3, _254.value4, _254.value5, _254.value6))(_252);
                            var __tco__253 = _253;
                            var __tco__254 = _254.value0;
                            __dict_Ord_19 = __tco___dict_Ord_19;
                            _252 = __tco__252;
                            _253 = __tco__253;
                            _254 = __tco__254;
                            continue tco;
                        };
                        if (_254 instanceof Three && (Prelude["<"](__dict_Ord_19)(_254.value1)(_253) && Prelude["<"](__dict_Ord_19)(_253)(_254.value4))) {
                            var __tco___dict_Ord_19 = __dict_Ord_19;
                            var __tco__252 = Prelude[":"](new ThreeMiddle(_254.value0, _254.value1, _254.value2, _254.value4, _254.value5, _254.value6))(_252);
                            var __tco__253 = _253;
                            var __tco__254 = _254.value3;
                            __dict_Ord_19 = __tco___dict_Ord_19;
                            _252 = __tco__252;
                            _253 = __tco__253;
                            _254 = __tco__254;
                            continue tco;
                        };
                        if (_254 instanceof Three) {
                            var __tco___dict_Ord_19 = __dict_Ord_19;
                            var __tco__252 = Prelude[":"](new ThreeRight(_254.value0, _254.value1, _254.value2, _254.value3, _254.value4, _254.value5))(_252);
                            var __tco__253 = _253;
                            var __tco__254 = _254.value6;
                            __dict_Ord_19 = __tco___dict_Ord_19;
                            _252 = __tco__252;
                            _253 = __tco__253;
                            _254 = __tco__254;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
    };
    return down(__dict_Ord_15)([  ]);
};
var checkValid = function (tree) {
    var allHeights = function (_245) {
        if (_245 instanceof Leaf) {
            return [ 0 ];
        };
        if (_245 instanceof Two) {
            return Data_Array.map(function (n) {
                return n + 1;
            })(Prelude["++"](Data_Array.semigroupArray())(allHeights(_245.value0))(allHeights(_245.value3)));
        };
        if (_245 instanceof Three) {
            return Data_Array.map(function (n) {
                return n + 1;
            })(Prelude["++"](Data_Array.semigroupArray())(allHeights(_245.value0))(Prelude["++"](Data_Array.semigroupArray())(allHeights(_245.value3))(allHeights(_245.value6))));
        };
        throw new Error("Failed pattern match");
    };
    return Data_Array.length(Data_Array.nub(Prelude.eqNumber())(allHeights(tree))) === 1;
};
var alter = function (__dict_Ord_20) {
    return function (f) {
        return function (k) {
            return function (m) {
                var _1250 = f(lookup(__dict_Ord_20)(k)(m));
                if (_1250 instanceof Data_Maybe.Nothing) {
                    return $$delete(__dict_Ord_20)(k)(m);
                };
                if (_1250 instanceof Data_Maybe.Just) {
                    return insert(__dict_Ord_20)(k)(_1250.value0)(m);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var update = function (__dict_Ord_21) {
    return function (f) {
        return function (k) {
            return function (m) {
                return alter(__dict_Ord_21)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
            };
        };
    };
};
module.exports = {
    map: map, 
    unions: unions, 
    union: union, 
    values: values, 
    keys: keys, 
    update: update, 
    alter: alter, 
    member: member, 
    "delete": $$delete, 
    fromList: fromList, 
    toList: toList, 
    lookup: lookup, 
    insert: insert, 
    checkValid: checkValid, 
    singleton: singleton, 
    isEmpty: isEmpty, 
    empty: empty, 
    showTree: showTree, 
    eqMap: eqMap, 
    showMap: showMap, 
    functorMap: functorMap
};
